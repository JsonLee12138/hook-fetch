"use strict";(self.webpackChunkhook_fetch_docs=self.webpackChunkhook_fetch_docs||[]).push([[3122],{527:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will help you get started with Hook-Fetch quickly, learning basic usage and common scenarios.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/hook-fetch/en/docs/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Json_Lee","lastUpdatedAt":1751963620000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Hook-Fetch \ud83d\ude80","permalink":"/hook-fetch/en/docs/intro"},"next":{"title":"API Reference","permalink":"/hook-fetch/en/docs/api-reference"}}');var a=s(4489),o=s(3237);const i={sidebar_position:2},r="Getting Started",l={},d=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Making Simple Requests",id:"making-simple-requests",level:3},{value:"Creating an Instance",id:"creating-an-instance",level:3},{value:"HTTP Methods",id:"http-methods",level:2},{value:"GET Requests",id:"get-requests",level:3},{value:"POST Requests",id:"post-requests",level:3},{value:"PUT Requests",id:"put-requests",level:3},{value:"PATCH Requests",id:"patch-requests",level:3},{value:"DELETE Requests",id:"delete-requests",level:3},{value:"HEAD and OPTIONS Requests",id:"head-and-options-requests",level:3},{value:"Response Handling",id:"response-handling",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Request Configuration",id:"request-configuration",level:2},{value:"Timeout Settings",id:"timeout-settings",level:3},{value:"Custom Headers",id:"custom-headers",level:3},{value:"File Upload",id:"file-upload",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,a.jsx)(n.p,{children:"This guide will help you get started with Hook-Fetch quickly, learning basic usage and common scenarios."}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.p,{children:"First, install Hook-Fetch:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Using npm\nnpm install hook-fetch\n\n# Using yarn\nyarn add hook-fetch\n\n# Using pnpm\npnpm add hook-fetch\n"})}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsx)(n.h3,{id:"making-simple-requests",children:"Making Simple Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import hookFetch from 'hook-fetch';\n\n// GET request\nconst response = await hookFetch('https://jsonplaceholder.typicode.com/posts/1').json();\nconsole.log(response);\n\n// POST request\nconst newPost = await hookFetch('https://jsonplaceholder.typicode.com/posts', {\n  method: 'POST',\n  data: {\n    title: 'My New Post',\n    body: 'This is the content of my post',\n    userId: 1\n  }\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"creating-an-instance",children:"Creating an Instance"}),"\n",(0,a.jsx)(n.p,{children:"For better configuration management, it's recommended to create an instance:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const api = hookFetch.create({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 5000 // 5 seconds timeout\n});\n\n// Use the instance\nconst posts = await api.get('/posts').json();\nconst users = await api.get('/users').json();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,a.jsx)(n.p,{children:"Hook-Fetch supports all standard HTTP methods:"}),"\n",(0,a.jsx)(n.h3,{id:"get-requests",children:"GET Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Without parameters\nconst posts = await api.get('/posts').json();\n\n// With query parameters\nconst filteredPosts = await api.get('/posts', {\n  userId: 1,\n  _limit: 10\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"post-requests",children:"POST Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const newPost = await api.post('/posts', {\n  title: 'New Post',\n  body: 'Post content',\n  userId: 1\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"put-requests",children:"PUT Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const updatedPost = await api.put('/posts/1', {\n  id: 1,\n  title: 'Updated Post',\n  body: 'Updated content',\n  userId: 1\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"patch-requests",children:"PATCH Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const patchedPost = await api.patch('/posts/1', {\n  title: 'Patched Title'\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"delete-requests",children:"DELETE Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const result = await api.delete('/posts/1').json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"head-and-options-requests",children:"HEAD and OPTIONS Requests"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// HEAD request - get only response headers\nconst headResponse = await api.head('/posts/1');\nconsole.log(headResponse.headers);\n\n// OPTIONS request - get allowed methods\nconst optionsResponse = await api.options('/posts');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"response-handling",children:"Response Handling"}),"\n",(0,a.jsx)(n.p,{children:"Hook-Fetch provides multiple response handling methods:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"const request = api.get('/posts/1');\n\n// JSON parsing\nconst jsonData = await request.json();\n\n// Text parsing\nconst textData = await request.text();\n\n// Blob handling (for file downloads)\nconst blobData = await request.blob();\n\n// ArrayBuffer handling\nconst arrayBufferData = await request.arrayBuffer();\n\n// FormData handling\nconst formData = await request.formData();\n\n// Byte data\nconst bytesData = await request.bytes();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"try {\n  const response = await api.get('/posts/999').json();\n} catch (error) {\n  if (error.response) {\n    // Server responded with error status code\n    console.log('Error status:', error.response.status);\n    console.log('Error data:', error.response.data);\n  } else if (error.request) {\n    // Request was sent but no response received\n    console.log('No response received');\n  } else {\n    // Other errors\n    console.log('Error:', error.message);\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"request-configuration",children:"Request Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"timeout-settings",children:"Timeout Settings"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Global timeout\nconst api = hookFetch.create({\n  timeout: 5000 // 5 seconds\n});\n\n// Individual request timeout\nconst response = await api.get('/posts', {}, {\n  timeout: 10000 // 10 seconds\n}).json();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"custom-headers",children:"Custom Headers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Global headers\nconst api = hookFetch.create({\n  headers: {\n    'Authorization': 'Bearer your-token',\n    'Content-Type': 'application/json'\n  }\n});\n\n// Individual request headers\nconst response = await api.get('/posts', {}, {\n  headers: {\n    'Custom-Header': 'custom-value'\n  }\n}).json();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"file-upload",children:"File Upload"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"// Using the upload method\nconst fileInput = document.querySelector('input[type=\"file\"]');\nconst file = fileInput.files[0];\n\nconst result = await api.upload('/upload', {\n  file: file,\n  description: 'My uploaded file'\n}).json();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/api-reference",children:"API Reference"})," - Complete API documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/plugins",children:"Plugin System"})," - Learn about plugins"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/streaming",children:"Streaming"})," - Streaming data processing"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/docs/framework-integration",children:"Framework Integration"})," - React and Vue integration"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},3237:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var t=s(4349);const a={},o=t.createContext(a);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);