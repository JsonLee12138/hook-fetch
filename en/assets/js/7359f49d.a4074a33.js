"use strict";(self.webpackChunkhook_fetch_docs=self.webpackChunkhook_fetch_docs||[]).push([[3630],{1061:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-reference","title":"API Reference","description":"This document provides a complete API reference for Hook-Fetch, including all methods, configuration options, and type definitions.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/api-reference.md","sourceDirName":".","slug":"/api-reference","permalink":"/hook-fetch/en/docs/api-reference","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Json_Lee","lastUpdatedAt":1751963620000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/hook-fetch/en/docs/getting-started"},"next":{"title":"Plugin System","permalink":"/hook-fetch/en/docs/plugins"}}');var o=s(4848),t=s(8453);const i={sidebar_position:3},l="API Reference",a={},c=[{value:"Main Exports",id:"main-exports",level:2},{value:"Default Export",id:"default-export",level:2},{value:"<code>hookFetch(url, options?)</code>",id:"hookfetchurl-options",level:3},{value:"<code>hookFetch.create(options)</code>",id:"hookfetchcreateoptions",level:3},{value:"Convenience Methods",id:"convenience-methods",level:2},{value:"<code>get(url, params?, options?)</code>",id:"geturl-params-options",level:3},{value:"<code>post(url, data?, options?)</code>",id:"posturl-data-options",level:3},{value:"<code>put(url, data?, options?)</code>",id:"puturl-data-options",level:3},{value:"<code>patch(url, data?, options?)</code>",id:"patchurl-data-options",level:3},{value:"<code>del(url, options?)</code>",id:"delurl-options",level:3},{value:"<code>head(url, params?, options?)</code>",id:"headurl-params-options",level:3},{value:"<code>options(url, params?, options?)</code>",id:"optionsurl-params-options",level:3},{value:"<code>upload(url, data?, options?)</code>",id:"uploadurl-data-options",level:3},{value:"HookFetch Instance Methods",id:"hookfetch-instance-methods",level:2},{value:"<code>use(plugin)</code>",id:"useplugin",level:3},{value:"<code>abortAll()</code>",id:"abortall",level:3},{value:"HookFetchRequest Methods",id:"hookfetchrequest-methods",level:2},{value:"Response Methods",id:"response-methods",level:3},{value:"Stream Methods",id:"stream-methods",level:3},{value:"Control Methods",id:"control-methods",level:3},{value:"Configuration Options",id:"configuration-options",level:2},{value:"BaseOptions",id:"baseoptions",level:3},{value:"RequestOptions",id:"requestoptions",level:3},{value:"Plugin System",id:"plugin-system",level:2},{value:"HookFetchPlugin Interface",id:"hookfetchplugin-interface",level:3},{value:"Plugin Lifecycle",id:"plugin-lifecycle",level:3},{value:"TypeScript Support",id:"typescript-support",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"ResponseError",id:"responseerror",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Instance Usage",id:"instance-usage",level:3},{value:"Plugin Usage",id:"plugin-usage",level:3},{value:"Streaming Usage",id:"streaming-usage",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,o.jsx)(n.p,{children:"This document provides a complete API reference for Hook-Fetch, including all methods, configuration options, and type definitions."}),"\n",(0,o.jsx)(n.h2,{id:"main-exports",children:"Main Exports"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import hookFetch, {\n  get, post, put, patch, del, head, options, upload, request\n} from 'hook-fetch';\n"})}),"\n",(0,o.jsx)(n.h2,{id:"default-export",children:"Default Export"}),"\n",(0,o.jsx)(n.h3,{id:"hookfetchurl-options",children:(0,o.jsx)(n.code,{children:"hookFetch(url, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"The main request function."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"})," (string): The request URL"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"})," (RequestOptions, optional): Request configuration"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Returns:"})," ",(0,o.jsx)(n.code,{children:"HookFetchRequest<T>"})," - Request object"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const response = await hookFetch('https://api.example.com/users').json();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"hookfetchcreateoptions",children:(0,o.jsx)(n.code,{children:"hookFetch.create(options)"})}),"\n",(0,o.jsx)(n.p,{children:"Creates a configured Hook-Fetch instance."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"})," (BaseOptions): Instance configuration"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Returns:"})," ",(0,o.jsx)(n.code,{children:"HookFetch"})," - Instance object"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const api = hookFetch.create({\n  baseURL: 'https://api.example.com',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"convenience-methods",children:"Convenience Methods"}),"\n",(0,o.jsx)(n.h3,{id:"geturl-params-options",children:(0,o.jsx)(n.code,{children:"get(url, params?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a GET request."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"})," (string): Request URL"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," (object, optional): Query parameters"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"})," (GetOptions, optional): Request configuration"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const users = await get('/users', { page: 1, limit: 10 }).json();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"posturl-data-options",children:(0,o.jsx)(n.code,{children:"post(url, data?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a POST request."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"})," (string): Request URL"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"data"})," (any, optional): Request body data"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"options"})," (PostOptions, optional): Request configuration"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const newUser = await post('/users', { name: 'John', email: 'john@example.com' }).json();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"puturl-data-options",children:(0,o.jsx)(n.code,{children:"put(url, data?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a PUT request."}),"\n",(0,o.jsx)(n.h3,{id:"patchurl-data-options",children:(0,o.jsx)(n.code,{children:"patch(url, data?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a PATCH request."}),"\n",(0,o.jsx)(n.h3,{id:"delurl-options",children:(0,o.jsx)(n.code,{children:"del(url, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a DELETE request."}),"\n",(0,o.jsx)(n.h3,{id:"headurl-params-options",children:(0,o.jsx)(n.code,{children:"head(url, params?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a HEAD request."}),"\n",(0,o.jsx)(n.h3,{id:"optionsurl-params-options",children:(0,o.jsx)(n.code,{children:"options(url, params?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes an OPTIONS request."}),"\n",(0,o.jsx)(n.h3,{id:"uploadurl-data-options",children:(0,o.jsx)(n.code,{children:"upload(url, data?, options?)"})}),"\n",(0,o.jsx)(n.p,{children:"Makes a file upload request."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const result = await upload('/upload', {\n  file: fileInput.files[0],\n  name: 'My File'\n}).json();\n"})}),"\n",(0,o.jsx)(n.h2,{id:"hookfetch-instance-methods",children:"HookFetch Instance Methods"}),"\n",(0,o.jsx)(n.h3,{id:"useplugin",children:(0,o.jsx)(n.code,{children:"use(plugin)"})}),"\n",(0,o.jsx)(n.p,{children:"Registers a plugin."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"plugin"})," (HookFetchPlugin): Plugin object"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Returns:"})," ",(0,o.jsx)(n.code,{children:"this"})," - The instance itself (supports method chaining)"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"api.use(myPlugin());\n"})}),"\n",(0,o.jsx)(n.h3,{id:"abortall",children:(0,o.jsx)(n.code,{children:"abortAll()"})}),"\n",(0,o.jsx)(n.p,{children:"Aborts all ongoing requests."}),"\n",(0,o.jsx)(n.h2,{id:"hookfetchrequest-methods",children:"HookFetchRequest Methods"}),"\n",(0,o.jsx)(n.h3,{id:"response-methods",children:"Response Methods"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"json()"})," - Parse response as JSON"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"text()"})," - Parse response as text"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"blob()"})," - Parse response as Blob"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"arrayBuffer()"})," - Parse response as ArrayBuffer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"formData()"})," - Parse response as FormData"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bytes()"})," - Parse response as bytes"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"stream-methods",children:"Stream Methods"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"stream()"})," - Get response as stream"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"control-methods",children:"Control Methods"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"abort()"})," - Abort the request"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"retry()"})," - Retry the request"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,o.jsx)(n.h3,{id:"baseoptions",children:"BaseOptions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface BaseOptions {\n  baseURL?: string;        // Base URL for requests\n  timeout?: number;        // Request timeout in milliseconds\n  headers?: HeadersInit;   // Default headers\n  plugins?: HookFetchPlugin[]; // Plugin list\n  withCredentials?: boolean;   // Include credentials\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"requestoptions",children:"RequestOptions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface RequestOptions<P, D, E> {\n  method?: RequestMethod;      // HTTP method\n  params?: P;                  // Query parameters\n  data?: D;                    // Request body data\n  headers?: HeadersInit;       // Request headers\n  timeout?: number;            // Request timeout\n  extra?: E;                   // Extra data for plugins\n  withCredentials?: boolean;   // Include credentials\n  qsArrayFormat?: 'indices' | 'brackets' | 'repeat' | 'comma';\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"plugin-system",children:"Plugin System"}),"\n",(0,o.jsx)(n.h3,{id:"hookfetchplugin-interface",children:"HookFetchPlugin Interface"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface HookFetchPlugin<T, E, P, D> {\n  name: string;                    // Plugin name (required)\n  priority?: number;               // Priority (optional, default 0)\n  beforeRequest?: BeforeRequestHandler<E, P, D>;\n  afterResponse?: AfterResponseHandler<T, E, P, D>;\n  beforeStream?: BeforeStreamHandler<E, P, D>;\n  transformStreamChunk?: TransformStreamChunkHandler<E, P, D>;\n  onError?: OnErrorHandler<E, P, D>;\n  onFinally?: OnFinallyHandler<E, P, D>;\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"plugin-lifecycle",children:"Plugin Lifecycle"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"beforeRequest"})," - Before request is sent"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"beforeStream"})," - Before stream processing (stream requests only)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"transformStreamChunk"})," - Transform stream chunks (stream requests only)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"afterResponse"})," - After response is received"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"onError"})," - Error handling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"onFinally"})," - Final cleanup"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"typescript-support",children:"TypeScript Support"}),"\n",(0,o.jsx)(n.p,{children:"Hook-Fetch provides complete TypeScript support with generic types:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\n// Type-safe request\nconst user = await api.get<User>('/users/1').json();\nconsole.log(user.name); // TypeScript provides full type hints\n"})}),"\n",(0,o.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,o.jsx)(n.h3,{id:"responseerror",children:"ResponseError"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"interface ResponseError<E = any> extends Error {\n  response?: Response;\n  request?: Request;\n  config?: RequestConfig<any, any, E>;\n  status?: number;\n  statusText?: string;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Simple GET request\nconst data = await hookFetch('https://api.example.com/data').json();\n\n// POST with data\nconst result = await hookFetch('https://api.example.com/users', {\n  method: 'POST',\n  data: { name: 'John', email: 'john@example.com' }\n}).json();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"instance-usage",children:"Instance Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const api = hookFetch.create({\n  baseURL: 'https://api.example.com',\n  headers: { 'Authorization': 'Bearer token' }\n});\n\nconst users = await api.get('/users').json();\nconst newUser = await api.post('/users', userData).json();\n"})}),"\n",(0,o.jsx)(n.h3,{id:"plugin-usage",children:"Plugin Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"const loggerPlugin = {\n  name: 'logger',\n  beforeRequest: (config) => {\n    console.log(`Making request to: ${config.url}`);\n    return config;\n  }\n};\n\napi.use(loggerPlugin);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"streaming-usage",children:"Streaming Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"for await (const chunk of api.get('/stream').stream()) {\n  console.log('Received:', chunk.result);\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This covers the main API surface of Hook-Fetch. For more detailed examples and advanced usage, see the other documentation sections."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6540);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);